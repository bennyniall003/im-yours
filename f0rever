<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>For You</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      margin: 0;
      background-color: #ffd6e8;
      overflow: hidden;
      font-family: 'Courier New', Courier, monospace;
      position: relative;
    }

    .center {
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      padding: 20px;
      position: relative;
      z-index: 10;
    }

    .heart {
      width: 80px;
      height: 80px;
      background: red;
      position: relative;
      transform: rotate(-45deg);
      cursor: pointer;
      animation: pulse 1.5s infinite;
    }

    .heart::before,
    .heart::after {
      content: "";
      width: 80px;
      height: 80px;
      background: red;
      border-radius: 50%;
      position: absolute;
    }

    .heart::before {
      top: -40px;
      left: 0;
    }

    .heart::after {
      left: 40px;
      top: 0;
    }

    @keyframes pulse {
      0%, 100% { transform: rotate(-45deg) scale(1); }
      50% { transform: rotate(-45deg) scale(1.1); }
    }

    .tiny-heart {
      position: absolute;
      width: 12px;
      height: 12px;
      background: red;
      transform: rotate(-45deg);
      animation: explode 1s forwards;
      z-index: 100;
    }

    .tiny-heart::before,
    .tiny-heart::after {
      content: "";
      width: 12px;
      height: 12px;
      background: red;
      border-radius: 50%;
      position: absolute;
    }

    .tiny-heart::before {
      top: -6px;
      left: 0;
    }

    .tiny-heart::after {
      left: 6px;
      top: 0;
    }

    @keyframes explode {
      to {
        transform: translate(var(--x), var(--y)) scale(1.2);
        opacity: 0;
      }
    }

    .message {
      margin-top: 30px;
      font-size: 1.3em;
      color: #333;
    }

    #line1, #line2, #line3 {
      display: inline-block;
      width: 0;
      overflow: hidden;
      white-space: nowrap;
      border-right: 2px solid black;
      animation: none;
    }

    @keyframes typing {
      from { width: 0 }
      to { width: 100% }
    }

    @keyframes blink {
      from, to { border-color: transparent }
      50% { border-color: black; }
    }

    #restart-btn {
      margin-top: 40px;
      padding: 10px 20px;
      font-size: 1em;
      border: none;
      background: #ff4f81;
      color: white;
      border-radius: 5px;
      cursor: pointer;
      display: none;
    }

    #restart-btn:hover {
      background: #ff2c65;
    }

    audio {
      display: none;
    }

    .falling-heart {
      position: absolute;
      width: 10px;
      height: 10px;
      background: red;
      transform: rotate(-45deg);
      opacity: 0.7;
      animation: fall linear infinite;
      z-index: 1;
    }

    .falling-heart::before,
    .falling-heart::after {
      content: "";
      position: absolute;
      width: 10px;
      height: 10px;
      background: red;
      border-radius: 50%;
    }

    .falling-heart::before {
      top: -5px;
      left: 0;
    }

    .falling-heart::after {
      top: 0;
      left: 5px;
    }

    @keyframes fall {
      0% {
        top: -10px;
        opacity: 0.8;
      }
      100% {
        top: 100vh;
        opacity: 0;
      }
    }

    @media (max-width: 600px) {
      .message {
        font-size: 1.1em;
      }

      .heart {
        width: 60px;
        height: 60px;
      }

      .heart::before,
      .heart::after {
        width: 60px;
        height: 60px;
      }
    }

    /* Exit screen */
    .exit {
      display: none;
      height: 100vh;
      background-color: #ffe6f0;
      color: #d10057;
      font-family: 'Courier New', monospace;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      text-align: center;
      animation: fadeIn 1s ease-in-out;
    }

    .exit .heart {
      animation: beat 1s infinite;
      margin-bottom: 20px;
      transform: none;
    }

    .exit h1 {
      font-size: 2em;
    }

    .exit p {
      font-size: 1.2em;
    }

    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }

    @keyframes beat {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.2); }
    }
  </style>
</head>
<body>
  <div class="center" id="main-content">
    <div class="heart" onclick="explodeHeart(this)"></div>
    <div class="message">
      <span id="line1">you could never let me down</span><br>
      <span id="line2">the world is better with you around</span><br>
      <span id="line3">happy birthday my precious</span>
    </div>
    <button id="restart-btn" onclick="restart()">Replay</button>
  </div>

  <div class="exit" id="exit-screen">
    <div class="heart">❤️</div>
    <h1>I’m yours.</h1>
    <p>Forever and for always.</p>
  </div>

  <audio id="bg-music" loop>
    <source src="https://cdn.pixabay.com/download/audio/2023/05/02/audio_dbdff204c0.mp3?filename=lofi-chill-medium-version-144402.mp3" type="audio/mp3">
  </audio>

  <script>
    let replayCount = 0;

    function explodeHeart(heartElement) {
      const rect = heartElement.getBoundingClientRect();
      for (let i = 0; i < 35; i++) {
        const tinyHeart = document.createElement('div');
        tinyHeart.className = 'tiny-heart';
        tinyHeart.style.left = rect.left + rect.width / 2 + 'px';
        tinyHeart.style.top = rect.top + rect.height / 2 + 'px';
        const angle = Math.random() * 2 * Math.PI;
        const distance = Math.random() * 180;
        tinyHeart.style.setProperty('--x', Math.cos(angle) * distance + 'px');
        tinyHeart.style.setProperty('--y', Math.sin(angle) * distance + 'px');
        document.body.appendChild(tinyHeart);
        setTimeout(() => tinyHeart.remove(), 1000);
      }

      heartElement.style.display = 'none';

      const music = document.getElementById("bg-music");
      music.volume = 0.4;
      music.play().catch(e => console.log("Autoplay blocked."));

      showMessage();
      document.getElementById("restart-btn").style.display = 'inline-block';
    }

    function showMessage() {
      document.getElementById("line1").style.animation = "typing 2.5s steps(35, end) forwards, blink 0.75s step-end infinite";
      document.getElementById("line2").style.animation = "typing 2.5s steps(40, end) forwards 2.8s, blink 0.75s step-end infinite";
      document.getElementById("line3").style.animation = "typing 2.5s steps(35, end) forwards 5.8s, blink 0.75s step-end infinite";
    }

    function restart() {
      replayCount++;
      if (replayCount >= 3) {
        showExitPage();
        return;
      }

      document.querySelector(".heart").style.display = 'block';

      ["line1", "line2", "line3"].forEach(id => {
        const el = document.getElementById(id);
        el.style.width = "0";
        el.style.animation = "none";
      });

      document.getElementById("restart-btn").style.display = 'none';
    }

    function createFallingHeart() {
      const heart = document.createElement('div');
      heart.className = 'falling-heart';
      heart.style.left = Math.random() * 100 + 'vw';
      heart.style.animationDuration = (5 + Math.random() * 5) + 's';
      document.body.appendChild(heart);
      setTimeout(() => heart.remove(), 10000);
    }

    function showExitPage() {
      document.getElementById("main-content").style.display = "none";
      document.getElementById("exit-screen").style.display = "flex";
    }

    setInterval(createFallingHeart, 300);
  </script>
</body>
</html>
